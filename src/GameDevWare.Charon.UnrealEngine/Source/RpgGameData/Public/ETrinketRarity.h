
#pragma once
//
// The source code was generated by the Charon, GameDevWare, 2024
// License: MIT
//
//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ReSharper disable All

#include "Misc/TVariant.h"

/**
  * Enumeration based on int32. Used in Schemas: Trinket.
  */
UENUM(BlueprintType)
enum class ETrinketRarity : uint8 {
	None = 0  UMETA(DisplayName = "None"),
	Common = 1  UMETA(DisplayName = "Common"),
	Uncommon = 2  UMETA(DisplayName = "Uncommon"),
	Rare = 3  UMETA(DisplayName = "Rare"),
	VeryRare = 4  UMETA(DisplayName = "VeryRare"),
	Shrieker = 5  UMETA(DisplayName = "Shrieker"),
	Ancestral = 6  UMETA(DisplayName = "Ancestral"),
	CrimsonCourt = 7  UMETA(DisplayName = "CrimsonCourt"),
	DarkestDungeon = 8  UMETA(DisplayName = "DarkestDungeon"),
	Trophy = 9  UMETA(DisplayName = "Trophy"),
	Backer = 10  UMETA(DisplayName = "Backer"),
};

/** Implements variant type traits for enumeration type. */
template<> struct TVariantTraits<ETrinketRarity>
{
	static constexpr EVariantTypes GetType() { return EVariantTypes::Enum; }
};
