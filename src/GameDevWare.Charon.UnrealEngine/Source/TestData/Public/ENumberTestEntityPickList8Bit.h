
#pragma once
//
// The source code was generated by the Charon, GameDevWare, 2024
// License: MIT
//
//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ReSharper disable All

#include "Misc/TVariant.h"

/**
  * Enumeration based on int32. Used in Schemas: NumberTestEntity.
  */
UENUM(BlueprintType)
enum class ENumberTestEntityPickList8Bit : uint8 {
	None = 0  UMETA(DisplayName = "None"),
	One = 1  UMETA(DisplayName = "One"),
	Two = 2  UMETA(DisplayName = "Two"),
	Three = 3  UMETA(DisplayName = "Three"),
	Four = 4  UMETA(DisplayName = "Four"),
	Five = 5  UMETA(DisplayName = "Five"),
};

/** Implements variant type traits for enumeration type. */
template<> struct TVariantTraits<ENumberTestEntityPickList8Bit>
{
	static constexpr EVariantTypes GetType() { return EVariantTypes::Enum; }
};
